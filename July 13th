//Balanced Parenthesis
Difficulty
Medium

Concepts
Loops, Conditionals


Given a string, return true or false depending on whether that string has balanced parentheses.

For the purposes of this problem, you only need to worry about parentheses ( and ), not other opening-and-closing marks, like curly brackets, square brackets, or angle brackets.

For example:

>>> has_balanced_parens("()")
// true

>>> has_balanced_parens("(Oh Noes!)(")
// false

>>> has_balanced_parens("((There's a bonus open paren here.)")
// false

>>> has_balanced_parens(")")
// false

>>> has_balanced_parens("(")
// false

>>> has_balanced_parens("(This has (too many closes.) ) )")
// false
You may consider a string with no parentheses balanced:

>>> has_balanced_parens("Hey...there are no parens here!")


let openParens = 0
let closedParens = 0
for(i=0;i<string.length;i++)
{
    if(string[i]==="( ")
    {
        openParenst++
    }
    else if(string[i]==="( ")
    {
        closedParens++
    }

}

if(openParens===closedParens)
{
    console.log("True")
}
else
  console.log("False")